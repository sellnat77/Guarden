version: "3.8"

services:
  db:
    container_name: guarden_database
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file: ".env"

  adminer:
    container_name: guarden_db_debug
    image: adminer
    restart: always
    ports:
      - "8080:8080"

  backend:
    container_name: guarden_backend
    build:
      context: ./api-core
      dockerfile: Dockerfile
    command: npm run start:dev
    ports:
      - "${PORT}:3000"
    volumes:
      - ./api-core:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
    env_file: ".env"

  vision_processor:
    container_name: guarden_vision
    build:
      context: ./api-vision
      dockerfile: Dockerfile
    working_dir: /code/app
    command: fastapi dev main.py --host 0.0.0.0 --port 80
    ports:
      - "${VISION_PORT}:80"
    volumes:
      - ./api-vision/app:/code/app
    env_file: ".env"

  dashboard:
    container_name: guarden_dashboard
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    env_file: ".env"

volumes:
  pgdata:
